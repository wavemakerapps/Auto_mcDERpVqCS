/*Copyright (c) 2015-2016 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.auto_mcderpvqcs.db_levelcheck;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/**
 * Child2 generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`CHILD2`")
public class Child2 implements Serializable {

    private Integer childId2;
    private String childColumn21;
    private String childColumn22;
    private String childColumn23;
    private Child1 child1;

    @Id
    @Column(name = "`CHILD_ID2`", nullable = false, scale = 0, precision = 10)
    public Integer getChildId2() {
        return this.childId2;
    }

    public void setChildId2(Integer childId2) {
        this.childId2 = childId2;
    }

    @Column(name = "`CHILD_COLUMN2_1`", nullable = true, length = 255)
    public String getChildColumn21() {
        return this.childColumn21;
    }

    public void setChildColumn21(String childColumn21) {
        this.childColumn21 = childColumn21;
    }

    @Column(name = "`CHILD_COLUMN2_2`", nullable = true, length = 255)
    public String getChildColumn22() {
        return this.childColumn22;
    }

    public void setChildColumn22(String childColumn22) {
        this.childColumn22 = childColumn22;
    }

    @Column(name = "`CHILD_COLUMN2_3`", nullable = true, length = 255)
    public String getChildColumn23() {
        return this.childColumn23;
    }

    public void setChildColumn23(String childColumn23) {
        this.childColumn23 = childColumn23;
    }

    @OneToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`CHILD_ID2`", referencedColumnName = "`CHILD_ID1`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`FK_CHILD2_TO_CHILD1_CHILY78ip`"))
    @Fetch(FetchMode.JOIN)
    public Child1 getChild1() {
        return this.child1;
    }

    public void setChild1(Child1 child1) {
        if(child1 != null) {
            this.childId2 = child1.getChildId1();
        }

        this.child1 = child1;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Child2)) return false;
        final Child2 child2 = (Child2) o;
        return Objects.equals(getChildId2(), child2.getChildId2());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getChildId2());
    }
}